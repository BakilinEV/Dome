
#Область ПроцедурыВзаимодействияПоПротоколуHTTP

&НаСервере
Функция ПолучитьHTTPСоединение(	Сервер="192.168.40.9",							// сервер (хост)
								Порт=80,										// порт, по умолчанию для http используется 80, для https 443
								Логин="Serv",									// пользователь для доступа к серверу (если он есть)
								Пароль="SERVgfhjkm",							// пароль для доступа к серверу (если он есть)
								Прокси=Неопределено,							// здесь указывается прокси, если он есть
								Таймаут=0,										// таймаут в секундах, 0 или пусто - не устанавливать
								ЗащищенноеСоединение=Неопределено,				// защищенное соединение, если используется https
								ИспользоватьАутентификациюОС=Ложь               // включает использование аутентификации NTLM или Negotiate на сервере
							  ) Экспорт
	
	Возврат Новый HTTPСоединение(Сервер, Порт, Логин, Пароль, Прокси, Таймаут, ЗащищенноеСоединение, ИспользоватьАутентификациюОС);
	
КонецФункции

&НаСервере
Функция ПолучитьДанныеПоAPI(Метод, Параметры=Неопределено, АдресРесурса="/Urals_BUH/hs/invAPI/") Экспорт 
	
	HTTPЗапрос = Новый HTTPЗапрос(АдресРесурса+Метод);
	HTTPЗапрос.Заголовки["Content-Type"] = "text/xml;charset=UTF-8";
	
	Если Параметры <> Неопределено Тогда
		HTTPЗапрос.УстановитьТелоИзСтроки(XMLСтрока(Новый ХранилищеЗначения(Параметры, Новый СжатиеДанных(5))), КодировкаТекста.UTF8);
	КонецЕсли;
	
	HTTPОтвет = ПолучитьHTTPСоединение().ОтправитьДляОбработки(HTTPЗапрос);
	
	Если HTTPОтвет.КодСостояния = 200 Тогда 
		Возврат XMLЗначение(Тип("ХранилищеЗначения"), HTTPОтвет.ПолучитьТелоКакСтроку()).Получить();
	КонецЕсли;
	
	Возврат "Ошибка отправки: "+HTTPОтвет.КодСостояния+Символы.ПС+HTTPОтвет.ПолучитьТелоКакСтроку();
	
КонецФункции

#КонецОбласти