
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОбновитьДанныеНаСервере();
	
	КонтрагентЮралс = Константы.КонтрагентЮралс.Получить();
	Если КонтрагентЮралс.Пустая() Тогда
		Справочники.Контрагенты.УстановитьКонтрагентЮралс();
		КонтрагентЮралс = Константы.КонтрагентЮралс.Получить();
	КонецЕсли;
	
	Менеджер = ПараметрыСеанса.ТекущийПользователь;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПереченьНаСервере(СтрокаДанных=Неопределено)
	
	Отбор = Неопределено;
	Если СтрокаДанных <> Неопределено Тогда
		Отбор = Новый Массив;
		Отбор.Добавить(СтрокаДанных);
	КонецЕсли;
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаДанных.Номенклатура КАК Номенклатура
	|ПОМЕСТИТЬ ТаблицаНоменклатуры
	|ИЗ
	|	&ТаблицаДанных КАК ТаблицаДанных
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаНоменклатуры.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА НЕ ЕСТЬNULL(ДопРеквизитыНоменклатуры.ЭтоЮралс, ЛОЖЬ)
	|			ТОГДА 3
	|		КОГДА НЕ ЗаявкаОферты.Номенклатура ЕСТЬ NULL
	|			ТОГДА 2
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Перечень
	|ИЗ
	|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаявкаПереченьОферт.СрезПоследних(НАЧАЛОПЕРИОДА(&Период, КВАРТАЛ), ) КАК ЗаявкаОферты
	|		ПО ТаблицаНоменклатуры.Номенклатура = ЗаявкаОферты.Номенклатура
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДопРеквизитыНоменклатуры КАК ДопРеквизитыНоменклатуры
	|		ПО ТаблицаНоменклатуры.Номенклатура = ДопРеквизитыНоменклатуры.Номенклатура"
	);
	
	Запрос.УстановитьПараметр("Период", ТекущаяДата());
	Запрос.УстановитьПараметр("ТаблицаДанных", ТаблицаДанных.Выгрузить(Отбор));
	
	ПереченьНоменклатуры = Запрос.Выполнить().Выгрузить();
	
	Если СтрокаДанных = Неопределено Тогда
		Для Каждого СтрокаТаблицы Из ТаблицаДанных Цикл
			НайденнаяСтрока = ПереченьНоменклатуры.Найти(СтрокаТаблицы.Номенклатура, "Номенклатура");
			СтрокаТаблицы.Перечень = ?(НайденнаяСтрока=Неопределено, 0, НайденнаяСтрока.Перечень);
		КонецЦикла;
	Иначе
		СтрокаДанных.Перечень = ПереченьНоменклатуры[0].Перечень;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьПеречень(Команда)
	УстановитьПереченьНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьЦеныНаСервере(СтрокаДанных, Список=Неопределено)
	
	Если СтрокаДанных.Перечень = 0 Тогда
		УстановитьПереченьНаСервере(СтрокаДанных);
	КонецЕсли;
	
	ТаблицаЦен = Неопределено;
	
	Если СтрокаДанных.Перечень = 1 Тогда
		
		ПараметрыAPI = Новый Структура("Номенклатура", СтрокаДанных.Номенклатура);
		РезультатAPI = ОбменAPI.ПолучитьДанныеAPI(, "LASTPRICE", ПараметрыAPI);
		
		Если ТипЗнч(РезультатAPI) = Тип("Строка") Тогда
			
			Сообщить("Ошибка получения данных Юралс: "+РезультатAPI);
			
		ИначеЕсли ТипЗнч(РезультатAPI) = Тип("ТаблицаЗначений") Тогда
			
			ТаблицаЦен = РезультатAPI.Скопировать();
			ТаблицаЦен.Колонки.Добавить("Контрагент");
			ТаблицаЦен.ЗаполнитьЗначения(КонтрагентЮралс, "Контрагент");
			
		КонецЕсли;
		
	Иначе
		
		Если СтрокаДанных.Перечень = 2 Тогда
			
			Запрос = Новый Запрос(
			"ВЫБРАТЬ
			|	ЗаявкаПереченьОферт.Номенклатура,
			|	ЗаявкаПереченьОферт.ЦенаБезНДС КАК Цена,
			|	ЕСТЬNULL(Контрагенты.Ссылка, ВЫРАЗИТЬ(ЗаявкаПереченьОферт.КонтрагентНаименование КАК СТРОКА(100))) КАК Контрагент
			|ИЗ
			|	РегистрСведений.ЗаявкаПереченьОферт.СрезПоследних(НАЧАЛОПЕРИОДА(&Период, Квартал), Номенклатура В(&Номенклатура)) КАК ЗаявкаПереченьОферт
			|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Контрагенты КАК Контрагенты
			|		ПО ЗаявкаПереченьОферт.КонтрагентИНН = Контрагенты.ИНН
			|			И (НЕ Контрагенты.ПометкаУдаления)
			|УПОРЯДОЧИТЬ ПО
			|	Цена"
			);
			
			Запрос.УстановитьПараметр("Период", ТекущаяДата());
			Запрос.УстановитьПараметр("Номенклатура", СтрокаДанных.Номенклатура);
			
		ИначеЕсли СтрокаДанных.Перечень = 3 Тогда
			
			Запрос = Новый Запрос(
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ЗаявкаТендер.Номенклатура,
			|	ЗаявкаТендер.Период,
			|	ЗаявкаТендер.Цена,
			|	ЗаявкаТендер.Контрагент КАК Контрагент
			|ПОМЕСТИТЬ РезультатТендера
			|ИЗ
			|	РегистрСведений.ЗаявкаТендер КАК ЗаявкаТендер
			|ГДЕ
			|	ЗаявкаТендер.ИдентификаторСтроки В(&ИдентификаторСтроки)
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	РезультатТендера.Номенклатура,
			|	РезультатТендера.Период,
			|	РезультатТендера.Цена,
			|	РезультатТендера.Контрагент,
			|	ИСТИНА КАК Тендер
			|ИЗ
			|	РезультатТендера КАК РезультатТендера
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ ПЕРВЫЕ 5
			|	ХозрасчетныйОборотыДтКт.СубконтоДт1,
			|	МАКСИМУМ(ХозрасчетныйОборотыДтКт.Период),
			|	ВЫБОР
			|		КОГДА ХозрасчетныйОборотыДтКт.КоличествоОборотДт = 0
			|			ТОГДА ХозрасчетныйОборотыДтКт.СуммаНУОборотДт
			|		ИНАЧЕ ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СуммаНУОборотДт / ХозрасчетныйОборотыДтКт.КоличествоОборотДт КАК ЧИСЛО(15, 2))
			|	КОНЕЦ,
			|	ХозрасчетныйОборотыДтКт.СубконтоКт1,
			|	ЛОЖЬ
			|ИЗ
			|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
			|			НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(&Период, МЕСЯЦ, -6), МЕСЯЦ),
			|			,
			|			Регистратор,
			|			СчетДт В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.Материалы)),
			|			,
			|			СчетКт В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками)),
			|			,
			|			СубконтоДт1 В (&Номенклатура)
			|				И ВЫБОР
			|					КОГДА &Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
			|						ТОГДА ИСТИНА
			|					ИНАЧЕ СубконтоДт3 = &Склад
			|				КОНЕЦ) КАК ХозрасчетныйОборотыДтКт
			|		ЛЕВОЕ СОЕДИНЕНИЕ РезультатТендера КАК РезультатТендера
			|		ПО ХозрасчетныйОборотыДтКт.СубконтоДт1 = РезультатТендера.Номенклатура
			|ГДЕ
			|	РезультатТендера.Цена ЕСТЬ NULL
			|
			|СГРУППИРОВАТЬ ПО
			|	ХозрасчетныйОборотыДтКт.СубконтоДт1,
			|	ХозрасчетныйОборотыДтКт.СубконтоКт1,
			|	ВЫБОР
			|		КОГДА ХозрасчетныйОборотыДтКт.КоличествоОборотДт = 0
			|			ТОГДА ХозрасчетныйОборотыДтКт.СуммаНУОборотДт
			|		ИНАЧЕ ВЫРАЗИТЬ(ХозрасчетныйОборотыДтКт.СуммаНУОборотДт / ХозрасчетныйОборотыДтКт.КоличествоОборотДт КАК ЧИСЛО(15, 2))
			|	КОНЕЦ
			|
			|УПОРЯДОЧИТЬ ПО
			|	РезультатТендера.Период УБЫВ"
			);
			
			Запрос.УстановитьПараметр("ИдентификаторСтроки", ТаблицаДанных.Выгрузить(Новый Структура("Номенклатура", СтрокаДанных.Номенклатура), "ИдентификаторСтроки").ВыгрузитьКолонку("ИдентификаторСтроки"));
			Запрос.УстановитьПараметр("Склад" , БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнойСклад"));
			
		КонецЕсли;
		
		Запрос.УстановитьПараметр("Период", ТекущаяДата());
		Запрос.УстановитьПараметр("Номенклатура", СтрокаДанных.Номенклатура);
		
		ТаблицаЦен = Запрос.Выполнить().Выгрузить();
		
	КонецЕсли;
	
	Если ТаблицаЦен = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(Список) = Тип("СписокЗначений") Тогда
		
		Для Каждого СтрокаТаблицы Из ТаблицаЦен Цикл
			СтруктураВозврата = Новый Структура("Цена, Контрагент", СтрокаТаблицы.Цена, СтрокаТаблицы.Контрагент);
			Список.Добавить(СтруктураВозврата, ""+Формат(СтрокаТаблицы.Цена, "ЧДЦ=2")+                                                                        // цена
												 ?(СтрокаДанных.Перечень=3 И СтрокаТаблицы.Тендер, " т ", " - ")+                                             // разделитель
												 СокрЛП(СтрокаТаблицы.Контрагент)+                                                                            // контрагент
												 ?(СтрокаДанных.Перечень=3 И Не СтрокаТаблицы.Тендер, Формат(СтрокаТаблицы.Период, "ДФ=' [dd.MM.yy]'"), "")); // дата последней покупки
		КонецЦикла;
		
	ИначеЕсли ТаблицаЦен.Количество() > 0 Тогда
		
		СтрокаДанных.Цена = ТаблицаЦен[0].Цена;
		СтрокаДанных.Сумма = СтрокаДанных.Цена*СтрокаДанных.Количество;
		СтрокаДанных.Контрагент = ТаблицаЦен[0].Контрагент;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЦеныНаСервере()
	
	Для Каждого СтрокаДанных Из ТаблицаДанных Цикл
		
		Если СтрокаДанных.Перечень = 0 Тогда
			УстановитьПереченьНаСервере(СтрокаДанных);
		КонецЕсли;
		
		ЗаполнитьЦеныНаСервере(СтрокаДанных);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьЦены(Команда)
	УстановитьЦеныНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЗаписатьДанныеНаСервере()
	
	Ответственный = ПараметрыСеанса.ТекущийПользователь;
	
	Для Каждого СтрокаДанных Из ТаблицаДанных Цикл
		
		Если СтрокаДанных.Количество = 0 Тогда
			
			РегистрыСведений.ЗаявкаСтатусы.УстановитьСтатус(СтрокаДанных.ИдентификаторСтроки, Справочники.СтатусыЗаявки.СтатусОтмена());
			
		КонецЕсли;
		
		Если СтрокаДанных.Перечень <> 0
		   И ЗначениеЗаполнено(СтрокаДанных.Цена)
		   И ЗначениеЗаполнено(СтрокаДанных.Контрагент) Тогда
			
			Запись = РегистрыСведений.ЗаявкаЦены.СоздатьМенеджерЗаписи();
			Запись.Период              = ТекущаяДата();
			Запись.ИдентификаторСтроки = СтрокаДанных.ИдентификаторСтроки;
			Запись.Количество          = СтрокаДанных.Количество;
			Запись.Цена                = СтрокаДанных.Цена;
			Запись.Перечень            = СтрокаДанных.Перечень;
			Запись.Контрагент          = СтрокаДанных.Контрагент;
			Запись.Ответственный       = Ответственный;
			Запись.ИмяКомпьютера       = ИмяКомпьютера();
			
			Запись.Записать();
			
		КонецЕсли;
		
		Если Не СтрокаДанных.Менеджер.Пустая() Тогда
			
			Запись = РегистрыСведений.ЗаявкаМенеджеры.СоздатьМенеджерЗаписи();
			Запись.Период              = ТекущаяДата();
			Запись.ИдентификаторСтроки = СтрокаДанных.ИдентификаторСтроки;
			Запись.Менеджер            = СтрокаДанных.Менеджер;
			Запись.Комментарий         = СтрокаДанных.Комментарий;
			Запись.Ответственный       = Ответственный;
			Запись.ИмяКомпьютера       = ИмяКомпьютера();
			
			Запись.Записать();
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьДанные(Команда)
	
	ЗаписатьДанныеНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДанныхКоличествоПриИзменении(Элемент)
	
	ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииКоличествоЦена(ЭтотОбъект, "ТаблицаДанных");
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДанныхЦенаПриИзменении(Элемент)
	
	ОбработкаТабличныхЧастейКлиентСервер.ПриИзмененииКоличествоЦена(ЭтотОбъект, "ТаблицаДанных");
	
КонецПроцедуры

#Область ВыборЦены

&НаСервере
Процедура ТаблицаДанныхЦенаНачалоВыбораНаСервере(НомерСтроки, Список)
	
	СтрокаДанных = ТаблицаДанных[НомерСтроки];
	
	ЗаполнитьЦеныНаСервере(СтрокаДанных, Список);
	
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДанныхЦенаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДанныеВыбора = Новый СписокЗначений;
	
	ТаблицаДанныхЦенаНачалоВыбораНаСервере(Элементы.ТаблицаДанных.ТекущаяСтрока, ДанныеВыбора);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьМенеджераНаСервере()
	
	Если Менеджер.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы Из ТаблицаДанных Цикл
		Если СтрокаТаблицы.Менеджер.Пустая() Тогда
			СтрокаТаблицы.Менеджер = Менеджер;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УстановитьМенеджера(Команда)
	УстановитьМенеджераНаСервере();
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеНаСервере()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ЗаявкаСтроки.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ЗаявкаСтроки.СрокПоставки КАК СрокПоставки,
	|	ЗаявкаСтроки.Артикул КАК Артикул,
	|	ЗаявкаСтроки.Номенклатура КАК Номенклатура,
	|	ЗаявкаСтроки.ОсновноеСредство КАК ОсновноеСредство,
	|	ЗаявкаСтроки.Количество КАК КоличествоЗаявлено,
	|	ЕСТЬNULL(ЗаявкаЦеныСрезПоследних.Количество, ЗаявкаСтроки.Количество) КАК Количество,
	|	ЕСТЬNULL(ЗаявкаЦеныСрезПоследних.Цена, 0) КАК Цена,
	|	ЗаявкаСтроки.Количество * ЕСТЬNULL(ЗаявкаЦеныСрезПоследних.Цена, 0) КАК Сумма,
	|	ЕСТЬNULL(ЗаявкаЦеныСрезПоследних.Перечень, ЗаявкаСтроки.Перечень) КАК Перечень,
	|	ЗаявкаЦеныСрезПоследних.Контрагент КАК Контрагент,
	|	ЗаявкаСтроки.Регистратор.Дата КАК ДатаСоздания,
	|	ЗаявкаМенеджерыСрезПоследних.Менеджер КАК Менеджер,
	|	ЗаявкаСтроки.НомерЗаявки КАК НомерЗаявки
	|ИЗ
	|	РегистрСведений.ЗаявкаСтроки КАК ЗаявкаСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаявкаЦены.СрезПоследних(, ) КАК ЗаявкаЦеныСрезПоследних
	|		ПО ЗаявкаСтроки.ИдентификаторСтроки = ЗаявкаЦеныСрезПоследних.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаявкаСтатусы.СрезПоследних КАК ЗаявкаСтатусыСрезПоследних
	|		ПО ЗаявкаСтроки.ИдентификаторСтроки = ЗаявкаСтатусыСрезПоследних.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаявкаМенеджеры.СрезПоследних КАК ЗаявкаМенеджерыСрезПоследних
	|		ПО ЗаявкаСтроки.ИдентификаторСтроки = ЗаявкаМенеджерыСрезПоследних.ИдентификаторСтроки
	|ГДЕ
	|	ЗаявкаСтатусыСрезПоследних.Статус.Код = ""001""
	|	И ЕСТЬNULL(ЗаявкаЦеныСрезПоследних.Цена, 0) = 0
	|	И ЕСТЬNULL(ЗаявкаЦеныСрезПоследних.Контрагент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) = ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаСоздания"
	);
	
	Результат = Запрос.Выполнить();
	
	ТаблицаДанных.Загрузить(Результат.Выгрузить());
	
	УстановитьЦеныНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанные(Команда)
	ОбновитьДанныеНаСервере();
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ТаблицаДанныхЦенаНачалоВыбораИзСпискаНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаДанныхЦенаНачалоВыбораИзСписка(Элемент, СтандартнаяОбработка)
	ТаблицаДанныхЦенаНачалоВыбораИзСпискаНаСервере();
КонецПроцедуры

#КонецОбласти // ВыборЦены