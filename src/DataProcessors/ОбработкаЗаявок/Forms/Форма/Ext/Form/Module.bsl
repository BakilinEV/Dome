
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Пользователь = ПараметрыСеанса.ТекущийПользователь;
	
	УстановитьДоступныеСтатусы();
	
	КомандаНачатьОбработкуНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступныеСтатусы()
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	СтатусыЗаявки.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ДоступныеСтатусы
	|ИЗ
	|	Справочник.СтатусыЗаявки КАК СтатусыЗаявки
	|ГДЕ
	|	СтатусыЗаявки.Код МЕЖДУ ""002"" И ""899""
	|	И СтатусыЗаявки.Пользователи.Пользователь В (&Пользователь, ЗНАЧЕНИЕ(Справочник.Пользователи.ПустаяСсылка))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатусыЗаявки.Ссылка КАК Ссылка
	|ИЗ
	|	ДоступныеСтатусы КАК ДоступныеСтатусы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.СтатусыЗаявки КАК СтатусыЗаявки
	|		ПО (ДоступныеСтатусы.Ссылка В (СтатусыЗаявки.Следующий, СтатусыЗаявки.Следующий1, СтатусыЗаявки.Следующий2, СтатусыЗаявки.Следующий3))"
	);
	
	Запрос.УстановитьПараметр("Пользователь", Пользователь);
	
	РезультатЗапроса = Запрос.ВыполнитьПакетСПромежуточнымиДанными();
	
	СтатусыДоступные.ЗагрузитьЗначения(РезультатЗапроса[0].Выгрузить().ВыгрузитьКолонку("Ссылка"));
	СтатусыВОжидании.ЗагрузитьЗначения(РезультатЗапроса[1].Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
	Колонки = Новый СписокЗначений;
	Колонки.Добавить("НомерЗаявки");
	Колонки.Добавить("Ответственный");
	Колонки.Добавить("Номенклатура");
	Колонки.Добавить("Количество");
	Колонки.Добавить("Цена");
	Колонки.Добавить("Сумма");
	Колонки.Добавить("ОсновноеСредство");
	Колонки.Добавить("Комментарий");
	
	Для Каждого СтатусДоступный Из СтатусыДоступные Цикл
		
		СтатусЗаявки = СтатусДоступный.Значение;
		
		ЭлементГруппа = Элементы.Добавить("СтраницаОжидания"+СтатусЗаявки.Код, Тип("ГруппаФормы"), Элементы.ГруппаЖурналыВОжидании);
		ЭлементГруппа.Вид = ВидГруппыФормы.Страница;
		ЭлементГруппа.Заголовок = Строка(СтатусЗаявки);
		
		ЭлементТаблица = Элементы.Добавить("ТаблицаОжидания"+СтатусЗаявки.Код, Тип("ТаблицаФормы"), ЭлементГруппа);
		ЭлементТаблица.ПутьКДанным = "СтрокиВОжидании";
		
		//Для Каждого Колонка Из СтатусЗаявки.Реквизиты Цикл
		//	ЭлементКолонка = Элементы.Добавить("Колонка"+Колонка.Имя+СтатусЗаявки.Код, Тип("ПолеФормы"), ЭлементТаблица);
		//	ЭлементКолонка.Вид = ВидПоляФормы.ПолеНадписи;
		//	ЭлементКолонка.ПутьКДанным = "СтрокиВОжидании."+Колонка.Имя;
		//КонецЦикла;
		
		Для Каждого Колонка Из Колонки Цикл
			ЭлементКолонка = Элементы.Добавить("Колонка"+Колонка.Значение+СтатусЗаявки.Код, Тип("ПолеФормы"), ЭлементТаблица);
			ЭлементКолонка.Вид = ВидПоляФормы.ПолеНадписи;
			ЭлементКолонка.ПутьКДанным = "СтрокиВОжидании."+Колонка.Значение;
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура КомандаНачатьОбработкуНаСервере(ТолькоЗаполнить=Истина)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ЗаявкаСтроки.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ЗаявкаСтроки.Номенклатура КАК Номенклатура,
	|	ЕСТЬNULL(ЗаявкаЦены.Количество, ЗаявкаСтроки.Количество) КАК Количество,
	|	ЗаявкаСтроки.ОсновноеСредство КАК ОсновноеСредство,
	|	ЗаявкаСтроки.НомерЗаявки КАК НомерЗаявки,
	|	ЕСТЬNULL(ЗаявкаЦены.Цена, ""-"") КАК Цена,
	|	ЕСТЬNULL(ЗаявкаЦены.Цена * ЕСТЬNULL(ЗаявкаЦены.Количество, ЗаявкаСтроки.Количество), ""-"") КАК Сумма,
	|	&Комментарий КАК Комментарий,
	|	ЗаявкаЦены.Контрагент КАК Контрагент,
	|	ЗаявкаЦены.Перечень КАК Перечень
	|ИЗ
	|	РегистрСведений.ЗаявкаСтатусы.СрезПоследних КАК ЗаявкаСтатусы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаявкаСтроки КАК ЗаявкаСтроки
	|		ПО ЗаявкаСтатусы.ИдентификаторСтроки = ЗаявкаСтроки.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаявкаЦены.СрезПоследних КАК ЗаявкаЦены
	|		ПО ЗаявкаСтатусы.ИдентификаторСтроки = ЗаявкаЦены.ИдентификаторСтроки
	|ГДЕ
	|	ЗаявкаСтатусы.Статус.Согласование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаявкаСтроки.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	ЗаявкаСтроки.Номенклатура КАК Номенклатура,
	|	ЕСТЬNULL(ЗаявкаЦены.Количество, ЗаявкаСтроки.Количество) КАК Количество,
	|	ЗаявкаСтроки.ОсновноеСредство КАК ОсновноеСредство,
	|	ЗаявкаСтроки.НомерЗаявки КАК НомерЗаявки,
	|	ЕСТЬNULL(ЗаявкаЦены.Цена, ""-"") КАК Цена,
	|	ЕСТЬNULL(ЗаявкаЦены.Цена, 0) * ЕСТЬNULL(ЗаявкаЦены.Количество, ЗаявкаСтроки.Количество) КАК Сумма,
	|	ЕСТЬNULL(ЗаявкаЦены.Перечень, ЗаявкаСтроки.Перечень) КАК Перечень,
	|	&Комментарий КАК Комментарий
	|ИЗ
	|	РегистрСведений.ЗаявкаСтатусы.СрезПоследних КАК ЗаявкаСтатусы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаявкаСтроки КАК ЗаявкаСтроки
	|		ПО ЗаявкаСтатусы.ИдентификаторСтроки = ЗаявкаСтроки.ИдентификаторСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаявкаЦены.СрезПоследних КАК ЗаявкаЦены
	|		ПО ЗаявкаСтатусы.ИдентификаторСтроки = ЗаявкаЦены.ИдентификаторСтроки
	|ГДЕ
	|	(ЗаявкаСтатусы.Статус.Следующий.Согласование
	|			ИЛИ ЗаявкаСтатусы.Статус.Следующий1.Согласование
	|			ИЛИ ЗаявкаСтатусы.Статус.Следующий2.Согласование
	|			ИЛИ ЗаявкаСтатусы.Статус.Следующий3.Согласование)"
	);
	
	Запрос.УстановитьПараметр("Комментарий", ШаблонКомментария);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	СтрокиВРаботе.Загрузить(РезультатЗапроса[0].Выгрузить());
	
	Если ТолькоЗаполнить Тогда 
		Возврат;
	КонецЕсли;
	
	Для Каждого СтрокаТаблицы Из РезультатЗапроса[1].Выгрузить() Цикл
		
		ЗаполнитьЗначенияСвойств(СтрокиВРаботе.Добавить(), СтрокаТаблицы);
		
		РегистрыСведений.ЗаявкаСтатусы.УстановитьСледующийСтатус(СтрокаТаблицы.ИдентификаторСтроки, СтрокаТаблицы.Перечень);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаНачатьОбработку(Команда)
	
	КомандаНачатьОбработкуНаСервере(Ложь);
	Элементы.СтрокиВОжидании.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаУстановитьФлажки(Команда)
	
	Для Каждого СтрокаЗаявки Из СтрокиВРаботе Цикл
		СтрокаЗаявки.Выбран = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаСнятьФлажки(Команда)
	
	Для Каждого СтрокаЗаявки Из СтрокиВРаботе Цикл
		СтрокаЗаявки.Выбран = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура КомандаСогласоватьНаСервере()
	
	ПараметрыОтбора = Новый Структура("Выбран", Истина);
	НайденныеСтроки = СтрокиВРаботе.НайтиСтроки(ПараметрыОтбора);
	
	Для Каждого СтрокаЗаявки Из НайденныеСтроки Цикл
		
		Запись = РегистрыСведений.ЗаявкаСогласованаЦена.СоздатьМенеджерЗаписи();
		Запись.Период              = ТекущаяДата();
		Запись.ИдентификаторСтроки = СтрокаЗаявки.ИдентификаторСтроки;
		Запись.СогласованаЦена     = Истина;
		Запись.Комментарий         = СтрокаЗаявки.Комментарий;
		Запись.Ответственный       = ПараметрыСеанса.ТекущийПользователь;
		Запись.ИмяКомпьютера       = ИмяКомпьютера();
		
		Запись.Записать();
		
		РегистрыСведений.ЗаявкаСтатусы.УстановитьСледующийСтатус(СтрокаЗаявки.ИдентификаторСтроки, СтрокаЗаявки.Перечень);
		
		СтрокиВРаботе.Удалить(СтрокаЗаявки);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаВыполнить(Команда)
	КомандаСогласоватьНаСервере();
КонецПроцедуры

&НаСервере
Процедура КомандаОтказатьНаСервере()
	
	ПараметрыОтбора = Новый Структура("Выбран", Истина);
	НайденныеСтроки = СтрокиВРаботе.НайтиСтроки(ПараметрыОтбора);
	
	Для Каждого СтрокаЗаявки Из НайденныеСтроки Цикл
		
		Запись = РегистрыСведений.ЗаявкаОтмененные.СоздатьМенеджерЗаписи();
		Запись.Период              = ТекущаяДата();
		Запись.ИдентификаторСтроки = СтрокаЗаявки.ИдентификаторСтроки;
		Запись.Комментарий         = СтрокаЗаявки.Комментарий;
		Запись.Ответственный       = ПараметрыСеанса.ТекущийПользователь;
		Запись.ИмяКомпьютера       = ИмяКомпьютера();
		
		Запись.Записать();
		
		РегистрыСведений.ЗаявкаСтатусы.УстановитьСтатус(СтрокаЗаявки.ИдентификаторСтроки, Справочники.СтатусыЗаявки.СтатусОтмена());
		
		СтрокиВРаботе.Удалить(СтрокаЗаявки);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаОтказать(Команда)
	КомандаОтказатьНаСервере();
КонецПроцедуры

&НаСервере
Процедура КомандаВернутьВОжиданиеНаСервере()
	
	ПараметрыОтбора = Новый Структура("Выбран", Истина);
	НайденныеСтроки = СтрокиВРаботе.НайтиСтроки(ПараметрыОтбора);
	
	Для Каждого СтрокаЗаявки Из НайденныеСтроки Цикл
		
		РегистрыСведений.ЗаявкаСтатусы.УстановитьПредыдущийСтатус(СтрокаЗаявки.ИдентификаторСтроки);
		
		СтрокиВРаботе.Удалить(СтрокаЗаявки);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаВернутьВОжидание(Команда)
	
	КомандаВернутьВОжиданиеНаСервере();
	Элементы.СтрокиВОжидании.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОповещениеПользователя() Экспорт
	
	ПоказатьОповещениеПользователя("КУПОЛ", "Бла-бла-бла", "Есть заявки требующие внимания", БиблиотекаКартинок.НапоминаниеРО, СтатусОповещенияПользователя.Важное);
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаУстановитьКомментарий(Команда)
	
	Для Каждого СтрокаВРаботе Из СтрокиВРаботе Цикл
		Если СтрокаВРаботе.Выбран Тогда
			СтрокаВРаботе.Комментарий = ШаблонКомментария;
		КонецЕсли;
	КонецЦикла;
	
	ПараметрыОтбора = Новый Структура("Выбран", Истина);
	НайденныеСтроки = СтрокиВРаботе.НайтиСтроки(ПараметрыОтбора);
	Для Каждого СтрокаВРаботе Из НайденныеСтроки Цикл
		СтрокаВРаботе.Комментарий = ШаблонКомментария;
	КонецЦикла;
	
	Для Каждого СтрокаВРаботе Из СтрокиВРаботе Цикл
		Если СтрокаВРаботе.Выбран Тогда
			СтрокаВРаботе.Комментарий = ШаблонКомментария;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ГруппаЖурналыВОжиданииПриСменеСтраницыНаСервере()
	// Вставить содержимое обработчика.
КонецПроцедуры

&НаКлиенте
Процедура ГруппаЖурналыВОжиданииПриСменеСтраницы(Элемент, ТекущаяСтраница)
	ГруппаЖурналыВОжиданииПриСменеСтраницыНаСервере();
КонецПроцедуры
