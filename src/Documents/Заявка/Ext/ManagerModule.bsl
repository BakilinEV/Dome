#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры
// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

Функция Пользователь1С() Экспорт 
	
	Возврат (Лев(ИмяПользователя(), 2) = "1С");
	
КонецФункции

#Область Печать


// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати.
//

Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт

	// Заявка
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Заявка";
	КомандаПечати.Представление = НСтр("ru = 'Заявка'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	КомандаПечати.СписокФорм    = "ФормаСписка,ФормаДокумента";
	
	// Заявка (три цены)
	//КомандаПечати = КомандыПечати.Добавить();
	//КомандаПечати.Идентификатор = "ЗаявкаТриЦены";
	//КомандаПечати.Представление = НСтр("ru = 'Заявка (три цены)'");
	//КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	//КомандаПечати.СписокФорм    = "ФормаСписка,ФормаДокумента";
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Реестр";
	КомандаПечати.Представление = НСтр("ru = 'Реестр документов'");
	КомандаПечати.ЗаголовокФормы= НСтр("ru = 'Реестр документов ""Заявки на закупки""'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм    = "ФормаСписка";
	КомандаПечати.Порядок       = 100;
	
КонецПроцедуры

// Формирует печатные формы
//
// Параметры:
//  (входные)
//    МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//    ПараметрыПечати - Структура - дополнительные настройки печати;
//  (выходные)
//   КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы.
//   ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                             представление - имя области в которой был выведен объект;
//   ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов.
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Заявка") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Заявка",
			НСтр("ru = 'Заявка'"), ПечатьЗаявки(МассивОбъектов, ОбъектыПечати),, "Документ.Заявка.Заявка");
	КонецЕсли;
	
	ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов,
		КоллекцияПечатныхФорм,
		ОбъектыПечати,
		ПараметрыВывода);
	
КонецПроцедуры

// Функция формирует табличный документ с печатной формой накладной,
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной
//
Функция ПечатьЗаявки(МассивОбъектов, ОбъектыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Заявка_Заявка";
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	Заявка.Номер КАК Номер,
	|	Заявка.Дата КАК Дата,
	|	Заявка.Организация КАК Организация,
	|	Заявка.АдресПоставки КАК АдресПоставки,
	|	Заявка.Ссылка КАК Ссылка,
	|	Заявка.Ответственный КАК Ответственный
	|ИЗ
	|	Документ.Заявка КАК Заявка
	|ГДЕ
	|	Заявка.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 1
	|	ЗаявкаСогласована.Период КАК Дата,
	|	ЗаявкаСогласована.Ответственный.ФизическоеЛицо КАК ФизЛицо,
	|	Заявка.Ссылка.Организация КАК Организация
	|ИЗ
	|	Документ.Заявка.Товары КАК Заявка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаявкаСогласованЗакуп.СрезПоследних КАК ЗаявкаСогласована
	|		ПО (Заявка.ИдентификаторСтроки = ЗаявкаСогласована.ИдентификаторСтроки)
	|ГДЕ
	|	Заявка.Ссылка = &Ссылка
	|	И ЗаявкаСогласована.Согласовано
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Заявка.НомерСтроки КАК НомерСтроки,
	|	Заявка.Номенклатура.Код КАК Код,
	|	Заявка.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА Заявка.Артикул = """"
	|			ТОГДА Заявка.Номенклатура.Артикул
	|		ИНАЧЕ Заявка.Артикул
	|	КОНЕЦ КАК КаталожныйНомер,
	|	Заявка.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	МестонахождениеОС.Местонахождение КАК ПодразделениеОбъект,
	|	Заявка.ОсновноеСредство КАК Автомобиль,
	|	ЗаявкаЦены.Количество КАК Количество,
	|	ЗаявкаЦены.Цена КАК Цена,
	|	ЗаявкаЦены.Количество * ЗаявкаЦены.Цена КАК Сумма,
	|	ЗаявкаЦены.Контрагент КАК Поставщик
	|ИЗ
	|	Документ.Заявка.Товары КАК Заявка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(, ) КАК МестонахождениеОС
	|		ПО Заявка.Ссылка.Организация = МестонахождениеОС.Организация
	|			И Заявка.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаявкаЦены.СрезПоследних КАК ЗаявкаЦены
	|		ПО Заявка.ИдентификаторСтроки = ЗаявкаЦены.ИдентификаторСтроки
	|ГДЕ
	|	Заявка.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Заявка.Ссылка,
	|	НомерСтроки"
	);
	
	Макет = ПолучитьОбщийМакет("Заявка");
	
	ОбластьШапка  = Макет.ПолучитьОбласть("Шапка");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	
	Для Каждого ОбъектПечати Из МассивОбъектов Цикл
	
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		Если НомерСтрокиНачало > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		Запрос.УстановитьПараметр("Ссылка", ОбъектПечати);
		//Запрос.УстановитьПараметр("ПереводСтроки"  , Символы.ПС);
		//Запрос.УстановитьПараметр("ДатаСведений"   , Новый Граница(ТекущаяДата(), ВидГраницы.Включая));
		
		Результат = Запрос.ВыполнитьПакет();
		
		Данные = Результат[0].Выбрать();
		Данные.Следующий();
		
		Таблица = Результат[2].Выгрузить();
		
		ОбластьШапка.Параметры.Заполнить(Данные);
		ОбластьШапка.Параметры.Заголовок = ОбщегоНазначенияБПВызовСервера.СформироватьЗаголовокДокумента(ОбъектПечати, "Заявка");
		
		//Выборка = Результат[1].Выбрать();
		//Пока Выборка.Следующий() Цикл
		//	ОбластьШапка.Параметры.Заполнить(ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(Данные.Организация, Выборка.ФизЛицо, Данные.Дата));
		//КонецЦикла;
		
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		Для Каждого СтрокаТаблицы Из Таблица Цикл 
			
			ОбластьСтрока.Параметры.Заполнить(СтрокаТаблицы);
			ОбластьСтрока.Параметры.Код = СокрЛП(СтрокаТаблицы.Код);
			ТабличныйДокумент.Вывести(ОбластьСтрока);
			
		КонецЦикла;
		
		ОбластьПодвал.Параметры.Заполнить(Данные);
		ОбластьПодвал.Параметры.Заполнить(ОбщегоНазначенияБПВызовСервера.ДанныеФизЛица(Данные.Организация, Данные.Ответственный, Данные.Дата));
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, ОбъектПечати);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

// Функция формирует табличный документ с печатной формой накладной,
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной
//
Функция ПечатьЗаявкиТриЦены(МассивОбъектов, ОбъектыПечати)
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_Заявка_ЗаявкаТриЦены";
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ЗаявкаОтПокупателя.Номер,
	|	ЗаявкаОтПокупателя.Дата,
	|	ЗаявкаОтПокупателя.Организация,
	|	ЗаявкаОтПокупателя.АдресПоставки,
	|	ЗаявкаОтПокупателя.Ссылка,
	|	ЗаявкаОтПокупателя.Ответственный.ФизЛицо КАК Ответственный,
	|	ЗаявкаОтПокупателя.СуммаДокумента
	|ИЗ
	|	Документ.ЗаявкаОтПокупателя КАК ЗаявкаОтПокупателя
	|ГДЕ
	|	ЗаявкаОтПокупателя.Ссылка = &ТекущийДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатусыЗаявок.Ответственный.ФизЛицо КАК ФизЛицо
	|ИЗ
	|	Документ.ЗаявкаОтПокупателя КАК ЗаявкаОтПокупателя
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыЗаявок КАК СтатусыЗаявок
	|		ПО ЗаявкаОтПокупателя.Ссылка = СтатусыЗаявок.Документ
	|ГДЕ
	|	ЗаявкаОтПокупателя.Ссылка = &ТекущийДокумент
	|	И СтатусыЗаявок.Статус.Согласование
	|
	|УПОРЯДОЧИТЬ ПО
	|	СтатусыЗаявок.Статус.Код
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаявкаОтПокупателяТовары.Номенклатура.Код КАК Код,
	|	ЗаявкаОтПокупателяТовары.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА ЗаявкаОтПокупателяТовары.Артикул = """"
	|			ТОГДА ЗаявкаОтПокупателяТовары.Номенклатура.Артикул
	|		ИНАЧЕ ЗаявкаОтПокупателяТовары.Артикул
	|	КОНЕЦ КАК КаталожныйНомер,
	|	ЗаявкаОтПокупателяТовары.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
	|	ЗаявкаОтПокупателяТовары.Количество КАК Количество,
	|	ЗаявкиПереченьОферт.ЦенаБезНДС КАК Цена,
	|	ВЫРАЗИТЬ(ЗаявкиПереченьОферт.КонтрагентНаименование КАК СТРОКА(100)) КАК Поставщик,
	|	"""" КАК Цена1,
	|	"""" КАК Поставщик1,
	|	"""" КАК Цена2,
	|	"""" КАК Поставщик2,
	|	"""" КАК Цена3,
	|	"""" КАК Поставщик3
	|ИЗ
	|	Документ.ЗаявкаОтПокупателя.Товары КАК ЗаявкаОтПокупателяТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаявкиПереченьОферт КАК ЗаявкиПереченьОферт
	|		ПО (ЗаявкаОтПокупателяТовары.ПереченьЗакупа = 2)
	|			И (НАЧАЛОПЕРИОДА(ЗаявкаОтПокупателяТовары.Ссылка.Дата, МЕСЯЦ) = ЗаявкиПереченьОферт.Период)
	|			И ЗаявкаОтПокупателяТовары.Номенклатура = ЗаявкиПереченьОферт.Номенклатура
	|			И ЗаявкаОтПокупателяТовары.Цена <= ЗаявкиПереченьОферт.ЦенаБезНДС
	|ГДЕ
	|	ЗаявкаОтПокупателяТовары.Ссылка = &ТекущийДокумент
	|	И ЗаявкаОтПокупателяТовары.ДтОтказа = ДАТАВРЕМЯ(1, 1, 1)
	|	И ЗаявкаОтПокупателяТовары.ПереченьЗакупа = 2
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЗаявкаОтПокупателяТовары.НомерСтроки,
	|	Номенклатура,
	|	Цена
	|ИТОГИ ПО
	|	Номенклатура"
	);
	
	//Запрос.УстановитьПараметр("ТекущийДокумент", Ссылка);
	Запрос.УстановитьПараметр("ПереводСтроки"  , Символы.ПС);
	//Запрос.УстановитьПараметр("ДатаСведений"   , Новый Граница(Дата, ВидГраницы.Включая));
	
	Результат = Запрос.ВыполнитьПакет();
	
	Данные = Результат[0].Выбрать();
	Данные.Следующий();
	
	Макет = ПолучитьМакет("ЗаявкаТриЦены");
	
	ОбластьШапка  = Макет.ПолучитьОбласть("Шапка");
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	
	ОбластьШапка.Параметры.Заполнить(Данные);
	//ОбластьШапка.Параметры.Заголовок = ОбщегоНазначения.СформироватьЗаголовокДокумента(Ссылка, "Заявка");
	
	Выборка = Результат[1].Выбрать();
	Пока Выборка.Следующий() Цикл
		ОбластьШапка.Параметры.Заполнить(глОбщий.ДанныеФизЛица(Данные.Организация, Выборка.ФизЛицо, Данные.Дата));
	КонецЦикла;
	
	ТабДокумент.Вывести(ОбластьШапка);
	
	НомерСтроки = 1;
	ВыборкаНоменклатуры = Результат[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаНоменклатуры.Следующий() Цикл
		
		ОбластьСтрока.Параметры.Заполнить(ВыборкаНоменклатуры);
		ОбластьСтрока.Параметры.НомерСтроки = НомерСтроки;
		
		НомерСтроки = НомерСтроки+1;
		
		НомЦены = 0;
		Выборка = ВыборкаНоменклатуры.Выбрать();
		Пока Выборка.Следующий() И НомЦены < 3 Цикл
			НомЦены = НомЦены+1;
			Если НомЦены = 1 Тогда
				ОбластьСтрока.Параметры.Заполнить(Выборка);
				ОбластьСтрока.Параметры.Код = СокрЛП(Выборка.Код);
			КонецЕсли;
			ОбластьСтрока.Параметры["Цена"+НомЦены] = Выборка.Цена;
			ОбластьСтрока.Параметры["Поставщик"+НомЦены] = Выборка.Поставщик;
		КонецЦикла;
		
		ТабДокумент.Вывести(ОбластьСтрока);
		
	КонецЦикла;
	
	ОбластьПодвал.Параметры.Заполнить(Данные);
	ОбластьПодвал.Параметры.Заполнить(глОбщий.ДанныеФизЛица(Данные.Организация, Данные.Ответственный, Данные.Дата));
	ТабДокумент.Вывести(ОбластьПодвал);
	
	Возврат ТабДокумент;
	
КонецФункции

#КонецОбласти // Печать

#КонецОбласти // СлужебныеПроцедурыИФункции

#КонецЕсли