
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	// При групповом перепроведении реквизиты документов не меняются,
	// поэтому обновление связанных данных выполнять не требуется.
	Если ПроведениеСервер.ГрупповоеПерепроведение(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	НайденныеСтроки = Товары.НайтиСтроки(Новый Структура("ИдентификаторСтроки", ""));
	Для Каждого СтрокаЗаказа Из НайденныеСтроки Цикл
		СтрокаЗаказа.ИдентификаторСтроки = Новый УникальныйИдентификатор;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	//ЗаявкаТовары.Ссылка.Дата КАК Период,
	|	ЗаявкаТовары.НомерСтроки КАК НомерСтроки,
	|	ЗаявкаТовары.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	СтатусыЗаявки.Ссылка КАК Статус,
	|	ЗаявкаТовары.Ссылка.Ответственный КАК Ответственный,
	|	&ИмяКомпьютера КАК ИмяКомпьютера
	|ИЗ
	|	Документ.Заявка.Товары КАК ЗаявкаТовары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЗаявкаСтатусы КАК ЗаявкаСтатусы
	|		ПО (ЗаявкаТовары.ИдентификаторСтроки = ЗаявкаСтатусы.ИдентификаторСтроки),
	|	Справочник.СтатусыЗаявки КАК СтатусыЗаявки
	|ГДЕ
	|	ЗаявкаТовары.Ссылка = &Ссылка
	|	И СтатусыЗаявки.Код = ""001""
	|	И ЗаявкаСтатусы.ИдентификаторСтроки ЕСТЬ NULL"
	);
	
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Запрос.УстановитьПараметр("ИмяКомпьютера", ИмяКомпьютера());
	
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			МенеджерЗаписи = РегистрыСведений.ЗаявкаСтатусы.СоздатьМенеджерЗаписи();
			МенеджерЗаписи.Период = ТекущаяДата();
			ЗаполнитьЗначенияСвойств(МенеджерЗаписи, Выборка);
			МенеджерЗаписи.Записать();
		КонецЦикла;
		
		//НаборЗаписей = РегистрыСведений.ЗаявкаСтатусы.СоздатьНаборЗаписей();
		//НаборЗаписей.Прочитать();
		//
		//Выборка = Результат.Выбрать();
		//Пока Выборка.Следующий() Цикл
		//	ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Выборка);
		//КонецЦикла;
		//
		//НаборЗаписей.Записать();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	ЗаполнитьОбъектПоУмолчанию();
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка)
	
	ЗаполнитьОбъектПоУмолчанию();
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	НаборЗаписей = Движения.ЗаявкаСтроки;
	НаборЗаписей.Загрузить(Товары.Выгрузить());
	НаборЗаписей.Записать();
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытий

#Область СлужебныеПроцедурыИФункции

#Область ОбработкаЗаполнения

Процедура ЗаполнитьОбъектПоУмолчанию()

	ОсновнаяОрганизация = БухгалтерскийУчетПереопределяемый.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
	
	Справочники.Организации.ПроверитьНаличиеОрганизацииПриОднофирменномУчете(ОсновнаяОрганизация);
	
	Организация = ОсновнаяОрганизация;
	
	Ответственный = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

#КонецОбласти // ОбработкаЗаполнения

#КонецОбласти // СлужебныеПроцедурыИФункции

#КонецЕсли